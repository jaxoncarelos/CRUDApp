{
  "version": 3,
  "sources": ["../../svelte-notifications/src/context.js", "../../svelte-notifications/src/components/Notification.svelte", "../../svelte-notifications/src/components/DefaultNotification.svelte", "../../svelte-notifications/src/positions.js", "../../svelte-notifications/src/store/actions/addNotification.js", "../../svelte-notifications/src/store/actions/removeNotification.js", "../../svelte-notifications/src/store/actions/clearNotifications.js", "../../svelte-notifications/src/store/index.js", "../../svelte-notifications/src/components/Notifications.svelte", "../../svelte-notifications/src/index.js"],
  "sourcesContent": ["import { getContext } from 'svelte';\n\nconst context = {\n  subscribe: null,\n  addNotification: null,\n  removeNotification: null,\n  clearNotifications: null,\n};\n\nexport const getNotificationsContext = () => getContext(context);\n\nexport default context;\n", "<script>\n  import { onDestroy } from 'svelte';\n\n  import { getNotificationsContext } from '../context';\n\n  export let item;\n  export let notification = {};\n  export let withoutStyles = false;\n\n  const { removeNotification } = getNotificationsContext();\n  const {\n    id,\n    removeAfter,\n  } = notification;\n\n  const removeNotificationHandler = () => removeNotification(id);\n\n  let timeout = null;\n\n  if (removeAfter) {\n    timeout = setTimeout(removeNotificationHandler, removeAfter);\n  }\n\n  onDestroy(() => {\n    if (removeAfter && timeout) clearTimeout(timeout);\n  });\n</script>\n\n<svelte:component\n  this={item}\n  {notification}\n  {withoutStyles}\n  onRemove={removeNotificationHandler}\n/>\n", "<style>\n  .default-notification-style {\n    position: relative;\n    display: flex;\n    align-items: stretch;\n    justify-content: space-between;\n    margin: 12px;\n    background: #fff;\n    color: #000;\n    border-radius: 6px;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);\n    min-height: 0;\n    min-width: 200px;\n    overflow: hidden;\n  }\n\n  .default-notification-style-content {\n    width: 210px;\n    padding: 12px 6px 12px 12px;\n    box-sizing: border-box;\n    word-wrap: break-word;\n  }\n\n  .default-notification-style-button {\n    display: block;\n    width: 40px;\n    padding: 0;\n    margin: 0;\n    border: none;\n    border-left: 1px solid #eee;\n    outline: none;\n    background: none;\n    cursor: pointer;\n    font-size: 20px;\n    color: #000;\n    box-sizing: border-box;\n  }\n\n  .default-notification-style-button:hover {\n    background: rgba(0, 0, 0, 0.01);\n  }\n\n  .default-notification-error {\n    background: #f3555a;\n    color: #fff;\n  }\n\n  .default-notification-error .default-notification-style-button {\n    border-left: 1px solid rgba(255, 255, 255, 0.4);\n    color: #fff;\n  }\n\n  .default-notification-warning {\n    background: #ffb900;\n    color: #000;\n  }\n\n  .default-notification-warning .default-notification-style-button {\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    color: #000;\n  }\n\n  .default-notification-success {\n    background: #22ce6c;\n    color: #fff;\n  }\n\n  .default-notification-success .default-notification-style-button {\n    border-left: 1px solid rgba(255, 255, 255, 0.4);\n    color: #fff;\n  }\n</style>\n\n<script>\n  import { fade } from 'svelte/transition';\n\n  export let notification = {};\n  export let withoutStyles = false;\n  export let onRemove = null;\n\n  const {\n    text,\n    type,\n  } = notification;\n\n  const getClass = (suffix) => {\n    const defaultSuffix = suffix ? `-${suffix}` : '';\n    const defaultNotificationClass = ` default-notification-style${defaultSuffix}`;\n    const defaultNotificationType = type && !suffix ? ` default-notification-${type}` : '';\n\n    return `notification${defaultSuffix}${withoutStyles ? '' : defaultNotificationClass}${defaultNotificationType}`;\n  };\n</script>\n\n{#if text}\n  <div\n    class={getClass()}\n    role=\"status\"\n    aria-live=\"polite\"\n    in:fade\n    out:fade\n  >\n    <div class={getClass('content')}>\n      <slot>{text}</slot>\n    </div>\n    <button\n      class={getClass('button')}\n      on:click={onRemove}\n      aria-label=\"delete notification\"\n    >\n      &times;\n    </button>\n  </div>\n{/if}\n", "const positions = [\n  'top-left',\n  'top-center',\n  'top-right',\n  'bottom-left',\n  'bottom-center',\n  'bottom-right',\n];\n\nexport default positions;\n", "import positions from '../../positions';\n\nconst addNotification = (notification, store) => {\n  if (!notification) return;\n\n  const { update } = store;\n  const safeNotification = {\n    id: `${new Date().getTime()}-${Math.floor(Math.random() * 9999)}`,\n    position: 'bottom-center',\n    text: '',\n    ...notification,\n  };\n\n  if (!positions.includes(notification.position)) return;\n\n  update((notifications) => {\n    if (safeNotification.position.includes('top-')) {\n      return [safeNotification, ...notifications];\n    }\n\n    return [...notifications, safeNotification];\n  });\n};\n\nexport default addNotification;\n", "const removeNotification = (notificationId, { update }) => {\n  if (!notificationId) return;\n\n  update((notifications) => notifications.filter(({ id }) => id !== notificationId));\n};\n\nexport default removeNotification;\n", "const clearNotifications = (store) => store.set([]);\n\nexport default clearNotifications;\n", "import { writable } from 'svelte/store';\n\nimport addNotification from './actions/addNotification';\nimport removeNotification from './actions/removeNotification';\nimport clearNotification from './actions/clearNotifications';\n\nconst createStore = () => {\n  const store = writable([]);\n\n  return {\n    subscribe: store.subscribe,\n    addNotification: (notification) => addNotification(notification, store),\n    removeNotification: (notificationId) => removeNotification(notificationId, store),\n    clearNotifications: () => clearNotification(store),\n  };\n};\n\nexport default createStore();\n", "<style>\n  .default-position-style-top-left,\n  .default-position-style-top-center,\n  .default-position-style-top-right,\n  .default-position-style-bottom-left,\n  .default-position-style-bottom-center,\n  .default-position-style-bottom-right {\n    position: fixed;\n    max-width: 400px;\n  }\n\n  .default-position-style-top-left {\n    top: 0;\n    left: 0;\n  }\n\n  .default-position-style-top-center {\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  .default-position-style-top-right {\n    top: 0;\n    right: 0;\n  }\n\n  .default-position-style-bottom-left {\n    bottom: 0;\n    left: 0;\n  }\n\n  .default-position-style-bottom-center {\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  .default-position-style-bottom-right {\n    bottom: 0;\n    right: 0;\n  }\n</style>\n<script>\n  import { setContext } from 'svelte';\n\n  import Notification from './Notification.svelte';\n  import DefaultNotification from './DefaultNotification.svelte';\n\n  import context from '../context';\n  import store from '../store';\n  import positions from '../positions';\n\n  export let item = null;\n  export let withoutStyles = false;\n  export let zIndex = null;\n\n  const getClass = (position = '') => {\n    const defaultPositionClass = ` default-position-style-${position}`;\n\n    return `position-${position}${withoutStyles ? '' : defaultPositionClass}`;\n  };\n\n  setContext(context, store);\n</script>\n\n<slot></slot>\n<div class=\"notifications\">\n  {#each positions as position}\n    <div\n      class={getClass(position)}\n      style:z-index={zIndex}\n    >\n      {#each $store as notification (notification.id)}\n        {#if notification.position === position}\n          <Notification\n            {notification}\n            {withoutStyles}\n            item={item || DefaultNotification}\n          />\n        {/if}\n      {/each}\n    </div>\n  {/each}\n</div>\n", "import Notifications from './components/Notifications.svelte';\n\nexport { getNotificationsContext } from './context';\n\nexport default Notifications;\n"],
  "mappings": "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",
  "names": ["ctx", "removeNotification", "ctx", "text", "ctx", "create_if_block"]
}
